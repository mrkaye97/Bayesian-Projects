geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), alpha = .5) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0)",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1)) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2)) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0)",
title = "Counts")
eagles.df.link <- link(no.interaction , data = eagles, refresh = 0)
eagles.df.y <- sim(no.interaction , data = eagles, refresh = 0)
temp <- eagles %>%
mutate(perm = paste(P,A,V, sep = ", "),
obs.y = y) %>%
dplyr::select(6, 7)
pred.eagles <- eagles %>%
mutate(
prob = apply(eagles.df.link, 2, mean),
prob.lo = apply(eagles.df.link, 2, PI, .89)[1,],
prob.hi = apply(eagles.df.link, 2, PI, .89)[2,],
y = apply(eagles.df.y, 2, mean),
y.lo = apply(eagles.df.y, 2, PI, .89)[1,],
y.hi = apply(eagles.df.y, 2, PI, .89)[2,]
) %>%
mutate(perm = paste(P,A,V, sep = ", ")) %>%
left_join(temp, by = "perm")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = prob.lo, ymax = prob.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = prob), position = position_dodge(width = 1), shape = I(1)) +
geom_point(aes(y = obs.y/n), position = position_dodge(width = 1), shape = I(2)) +
labs(x = "Permutation",
y = "Pr(Success)",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Probabilities")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1)) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2)) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
rm(list = ls())
library(tidyverse)
library(rethinking)
library(MASS)
load("stan_fit_ps8q1.Rdata")
output <- precis(fit.unstd)@output
knitr::kable(output, format = 'markdown', digits = 3, align = 'c')
plot(fit.unstd)
odds.change <- exp(coef(fit.unstd))
p.preds <- link(fit.unstd, data = list(temp = 31), refresh = 0)
pred.bands <- cbind(
pred.mean = apply(p.preds, 2, mean),
lower.97 = apply(p.preds, 2, PI, .97)[1,],
upper.97 = apply(p.preds, 2, PI, .97)[2,],
temp = 31
) %>%
data.frame()%>%
rownames_to_column() %>%
dplyr::select(2:5)
knitr::kable(pred.bands, format = 'markdown', align = 'c', digits = 3)
output <- precis(fit.std)@output
knitr::kable(output, format = 'markdown', digits = 3, align = 'c')
rm(list = ls())
load("stan_fit_ps8q2.Rdata")
eagles <- eagles %>%
mutate(P = ifelse(P == "S", 1, 0),
A = ifelse(A == "I", 1, 0),
V = ifelse(V == "S", 1, 0))
output <- precis(no.interaction)@output
knitr::kable(output, format = 'markdown', digits = 3, align = 'c')
plot(no.interaction)
odds.change <- exp(coef(no.interaction))
eagles.df.link <- link(no.interaction , data = eagles, refresh = 0)
eagles.df.y <- sim(no.interaction , data = eagles, refresh = 0)
temp <- eagles %>%
mutate(perm = paste(P,A,V, sep = ", "),
obs.y = y) %>%
dplyr::select(6, 7)
pred.eagles <- eagles %>%
mutate(
prob = apply(eagles.df.link, 2, mean),
prob.lo = apply(eagles.df.link, 2, PI, .89)[1,],
prob.hi = apply(eagles.df.link, 2, PI, .89)[2,],
y = apply(eagles.df.y, 2, mean),
y.lo = apply(eagles.df.y, 2, PI, .89)[1,],
y.hi = apply(eagles.df.y, 2, PI, .89)[2,]
) %>%
mutate(perm = paste(P,A,V, sep = ", ")) %>%
left_join(temp, by = "perm")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = prob.lo, ymax = prob.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = prob), position = position_dodge(width = 1), shape = I(1)) +
geom_point(aes(y = obs.y/n), position = position_dodge(width = 1), shape = I(2), color = 'red') +
labs(x = "Permutation",
y = "Pr(Success)",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Probabilities")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1)) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red') +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = prob.lo, ymax = prob.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = prob), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y/n), position = position_dodge(width = 1), shape = I(2), color = 'red', alpha = .5) +
labs(x = "Permutation",
y = "Pr(Success)",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Probabilities")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = prob.lo, ymax = prob.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = prob), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y/n), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5) +
labs(x = "Permutation",
y = "Pr(Success)",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Probabilities")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = prob.lo, ymax = prob.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = prob, fill = 'black'), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y/n), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5) +
labs(x = "Permutation",
y = "Pr(Success)",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Probabilities")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = prob.lo, ymax = prob.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = prob, fill = "black"), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y/n), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5) +
labs(x = "Permutation",
y = "Pr(Success)",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Probabilities")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = prob.lo, ymax = prob.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = prob), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y/n), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5) +
labs(x = "Permutation",
y = "Pr(Success)",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Probabilities")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")+
scale_fill_manual(values=c("blue", "cyan4"))
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5, size = 2) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5, size = 4) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5, size = 3) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = "blue", alpha = .5, size = 3) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = "blue", size = 3) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5, size = 3) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = "blue", alpha = .5, size = 3) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), shape = I(1), alpha = .5, size = 3) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = "blue", alpha = .5, size = 3) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = I(1), alpha = .5, size = 3) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = "blue", alpha = .5, size = 3) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = y.lo, ymax = y.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = y), position = position_dodge(width = 1), shape = 1, alpha = .5, size = 3) +
geom_point(aes(y = obs.y, x = perm), position = position_dodge(width = 1), shape = 2, color = 'red', fill = "blue", alpha = .5, size = 3) +
labs(x = "Permutation",
y = "Number of Successes",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Counts")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = prob.lo, ymax = prob.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = prob), position = position_dodge(width = 1), shape = I(1), alpha = .5) +
geom_point(aes(y = obs.y/n), position = position_dodge(width = 1), shape = I(2), color = 'red', fill = 'red', alpha = .5) +
labs(x = "Permutation",
y = "Pr(Success)",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Probabilities")
ggplot(data = pred.eagles, aes(x = perm)) +
geom_linerange(aes(ymin = prob.lo, ymax = prob.hi), position = position_dodge(width = 1)) +
geom_point(aes(y = prob), position = position_dodge(width = 1), shape = 1, alpha = .5, size = 3) +
geom_point(aes(y = obs.y/n), position = position_dodge(width = 1), shape = 2, color = 'red', fill = 'red', alpha = .5, size = 3) +
labs(x = "Permutation",
y = "Pr(Success)",
caption = "(0, 0, 0) corresponds to (P = 0, A = 0, V = 0). triangles are observed values. circles are predictions",
title = "Probabilities")
?eagles
stargazer::stargazer(output)
stargazer::stargazer(output, type = "text")
knitr::kable(output, format = 'markdown', digits = 3, align = 'c')
rm(list = ls())
load("stan_fit_ps8q2.Rdata")
eagles <- eagles %>%
mutate(P = ifelse(P == "S", 1, 0),
A = ifelse(A == "I", 1, 0),
V = ifelse(V == "S", 1, 0))
output <- precis(no.interaction, pars = c("SmallPirate", "Immature Pirate", "SmallVictim"))@output
knitr::kable(output, format = 'markdown', digits = 3, align = 'c')
plot(no.interaction)
output <- precis(no.interaction, pars = c("a", "SmallPirate", "Immature Pirate", "SmallVictim"))@output
knitr::kable(output, format = 'markdown', digits = 3, align = 'c')
plot(no.interaction)
knitr::kable(output, format = 'markdown', digits = 3, align = 'c')
output <- precis(no.interaction, pars = list("a", "SmallPirate", "Immature Pirate", "SmallVictim"))@output
knitr::kable(output, format = 'markdown', digits = 3, align = 'c')
output <- precis(no.interaction)@output
knitr::kable(output, format = 'markdown', digits = 3, align = 'c')
The Happy City
========================================================
author: Matt Kaye
date: 11/13/18
autosize: true
First Slide
========================================================
For more details on authoring R presentations please visit <https://support.rstudio.com/hc/en-us/articles/200486468>.
- Bullet 1
- Bullet 2
- Bullet 3
Slide With Code
========================================================
```{r}
summary(cars)
```
Slide With Plot
========================================================
```{r, echo=FALSE}
plot(cars)
```
rm(list = ls())
library(tidyverse)
library(data.table)
library(gridExtra)
library(grid)
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
rm(list = ls())
library(tidyverse)
library(data.table)
library(gridExtra)
library(grid)
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
ggplot(data = df.2017, aes(x = Density, y = Rides.perCap))+
geom_point(aes(color = Modes, size = Population), alpha = .5)+
labs(x = "Population Density", y = "Total Unlinked Rides Per Capita")
tot.rides <- fread("/users/matt/google drive/carleton/junior year/econ395/raw_data/transit_utrips.csv", na.strings = "") %>%
gather(time, rides, JAN02:AUG18) %>%
mutate(month = substr(time, 1, 3),
year = paste("20", substr(time, 4, 5), sep = ""),
rides = as.numeric(gsub(pattern = ",", replacement = "", x = rides))) %>%
group_by(year, UZA, `UZA Name`, Modes, TOS, `5 digit NTD ID`) %>%
summarise(rides = sum(rides)) %>%
ungroup()
rides <- tot.rides %>%
na.omit() %>%
filter(Modes %in% c("HR", "MB", "SR", "LR"))
df <- fread("/users/matt/google drive/carleton/junior year/econ395/raw_data/population.csv", na.strings = "") %>%
select(7,9:11) %>%
unique() %>%
na.omit() %>%
left_join(rides, by = "UZA Name") %>%
select(1:5, 7,8,10) %>%
na.omit() %>%
rename(Metro = 1, Area_sqm = 4, Rides = 8) %>%
mutate(Modes = as.factor(Modes),
Metro = as.factor(Metro),
Population = as.numeric(gsub(pattern = ",", replacement = "", x = Population)),
Density = as.numeric(gsub(pattern = ",", replacement = "", x = Density)),
Area_sqm = as.numeric(gsub(pattern = ",", replacement = "", x = Area_sqm))) %>%
group_by(Metro, Modes, year) %>%
summarize(Rides = sum(Rides), Population = mean(Population), Density = min(Density), Area_sqm = min(Area_sqm)) %>%
ungroup() %>%
mutate(Rides.perCap = Rides / Population,
Modes = recode(Modes, HR = "Heavy Rail", MB = "Bus", SR = "Streetcar", LR = "Light Rail"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
rm(list = ls())
library(tidyverse)
library(data.table)
library(gridExtra)
library(grid)
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
tot.rides <- fread("/users/matt/google drive/carleton/junior year/econ395/raw_data/transit_utrips.csv", na.strings = "") %>%
gather(time, rides, JAN02:AUG18) %>%
mutate(month = substr(time, 1, 3),
year = paste("20", substr(time, 4, 5), sep = ""),
rides = as.numeric(gsub(pattern = ",", replacement = "", x = rides))) %>%
group_by(year, UZA, `UZA Name`, Modes, TOS, `5 digit NTD ID`) %>%
summarise(rides = sum(rides)) %>%
ungroup()
rides <- tot.rides %>%
na.omit() %>%
filter(Modes %in% c("HR", "MB", "SR", "LR"))
df <- fread("/users/matt/google drive/carleton/junior year/econ395/raw_data/population.csv", na.strings = "") %>%
select(7,9:11) %>%
unique() %>%
na.omit() %>%
left_join(rides, by = "UZA Name") %>%
select(1:5, 7,8,10) %>%
na.omit() %>%
rename(Metro = 1, Area_sqm = 4, Rides = 8) %>%
mutate(Modes = as.factor(Modes),
Metro = as.factor(Metro),
Population = as.numeric(gsub(pattern = ",", replacement = "", x = Population)),
Density = as.numeric(gsub(pattern = ",", replacement = "", x = Density)),
Area_sqm = as.numeric(gsub(pattern = ",", replacement = "", x = Area_sqm))) %>%
group_by(Metro, Modes, year) %>%
summarize(Rides = sum(Rides), Population = mean(Population), Density = min(Density), Area_sqm = min(Area_sqm)) %>%
ungroup() %>%
mutate(Rides.perCap = Rides / Population,
Modes = recode(Modes, HR = "Heavy Rail", MB = "Bus", SR = "Streetcar", LR = "Light Rail"))
df <- fread("/users/matt/google drive/carleton/junior year/econ395/raw_data/population.csv", na.strings = "")
View(df)
df <- fread("/users/matt/google drive/carleton/junior year/econ395/raw_data/population.csv", na.strings = "") %>%
select(7,9:11)
df <- fread("/users/matt/google drive/carleton/junior year/econ395/raw_data/population.csv", na.strings = "") %>%
dplyr::select(7,9:11) %>%
unique() %>%
na.omit() %>%
left_join(rides, by = "UZA Name") %>%
select(1:5, 7,8,10) %>%
na.omit() %>%
rename(Metro = 1, Area_sqm = 4, Rides = 8) %>%
mutate(Modes = as.factor(Modes),
Metro = as.factor(Metro),
Population = as.numeric(gsub(pattern = ",", replacement = "", x = Population)),
Density = as.numeric(gsub(pattern = ",", replacement = "", x = Density)),
Area_sqm = as.numeric(gsub(pattern = ",", replacement = "", x = Area_sqm))) %>%
group_by(Metro, Modes, year) %>%
summarize(Rides = sum(Rides), Population = mean(Population), Density = min(Density), Area_sqm = min(Area_sqm)) %>%
ungroup() %>%
mutate(Rides.perCap = Rides / Population,
Modes = recode(Modes, HR = "Heavy Rail", MB = "Bus", SR = "Streetcar", LR = "Light Rail"))
df <- fread("/users/matt/google drive/carleton/junior year/econ395/raw_data/population.csv", na.strings = "") %>%
dplyr::select(7,9:11) %>%
unique() %>%
na.omit() %>%
left_join(rides, by = "UZA Name") %>%
dplyr::select(1:5, 7,8,10) %>%
na.omit() %>%
rename(Metro = 1, Area_sqm = 4, Rides = 8) %>%
mutate(Modes = as.factor(Modes),
Metro = as.factor(Metro),
Population = as.numeric(gsub(pattern = ",", replacement = "", x = Population)),
Density = as.numeric(gsub(pattern = ",", replacement = "", x = Density)),
Area_sqm = as.numeric(gsub(pattern = ",", replacement = "", x = Area_sqm))) %>%
group_by(Metro, Modes, year) %>%
summarize(Rides = sum(Rides), Population = mean(Population), Density = min(Density), Area_sqm = min(Area_sqm)) %>%
ungroup() %>%
mutate(Rides.perCap = Rides / Population,
Modes = recode(Modes, HR = "Heavy Rail", MB = "Bus", SR = "Streetcar", LR = "Light Rail"))
df.2017 <- df %>%
filter(year == "2017")
ggplot(data = df.2017, aes(x = Density, y = Rides.perCap))+
geom_point(aes(color = Modes, size = Population), alpha = .5)+
labs(x = "Population Density", y = "Total Unlinked Rides Per Capita")
ggplot(data = df.2017, aes(x = Density, y = Rides.perCap))+
geom_point(aes(color = Modes, size = Population), alpha = .5)+
scale_x_log10()+
scale_y_log10()+
labs(x = "Population Density", y = "Total Unlinked Rides Per Capita")
View(rides)
View(df)
getwd()
setwd("/Users/matt/Google Drive/Carleton")
devtools::create("basictemplate")
dir.create("basictemplate/inst/rmarkdown/templates/report/skeleton",
recursive = TRUE)
getwd()
devtools::install("basictemplate")
devtools::install("basictemplate")
setwd("/users/matt/google drive/carleton")
devtools::install("basictemplate")
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
library(tidyverse)
library(data.table)
df <- fread("/users/matt/downloads/interactive_data.csv")
View(df)
df <- fread("/users/matt/downloads/interactive_data.csv", select = 2:8)
View(df)
unique(df$Intent)
ggplot(data = df)+
geom_boxplot(mapping = aes(x = factor(Race), y = Deaths))
ggplot(data = df)+
geom_boxplot(mapping = aes(x = factor(Race), y = Rate))
ggplot(data = df)+
geom_boxplot(mapping = aes(x = factor(Race), y = Rate), color = factor(Race))
ggplot(data = df)+
geom_boxplot(mapping = aes(x = factor(Race), y = Rate, color = factor(Race)))
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent))
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent), stat = stat_count())
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent), stat = stat_count
ggplot(data = df)+
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent), stat = "Race")
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent), stat = Race)
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent), stat = "identity")
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent))
, stat = "identity"
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent), stat = "identity")
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent), stat = "identity")+
theme_minimal()
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent), stat = "identity", position = position_dodge())+
theme_minimal()
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Rate, fill = Intent), stat = "identity")+
theme_minimal()
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = Deaths, fill = Intent), stat = "identity")+
theme_minimal()
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = I(Deaths/Population), fill = Intent), stat = "identity")+
theme_minimal()
df <- fread("/users/matt/downloads/interactive_data.csv", select = 2:8) %>%
filter(Race != "None Selected")
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = I(Deaths/Population), fill = Intent), stat = "identity")+
theme_minimal()
df <- fread("/users/matt/downloads/interactive_data.csv", select = 2:8) %>%
filter(Race != "None selected")
ggplot(data = df)+
geom_bar(mapping = aes(x = factor(Race), y = I(Deaths/Population), fill = Intent), stat = "identity")+
theme_minimal()
